name: Documentation Build

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.readthedocs.yaml'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.readthedocs.yaml'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for version detection

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[docs]
        pip install -r docs/requirements.txt

    - name: Build documentation with Sphinx
      run: |
        cd docs
        sphinx-build -b html . _build/html -W --keep-going

    - name: Test documentation links
      run: |
        cd docs
        sphinx-build -b linkcheck . _build/linkcheck || true

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: documentation-${{ matrix.python-version }}
        path: docs/_build/html/
        retention-days: 30

    - name: Deploy to GitHub Pages (on main/master push)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
        force_orphan: true

  # Trigger ReadTheDocs build via webhook
  trigger-rtd:
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - name: Trigger ReadTheDocs build
      if: ${{ secrets.READTHEDOCS_WEBHOOK_URL }}
      run: |
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{"branches": ["main", "master"]}' \
          ${{ secrets.READTHEDOCS_WEBHOOK_URL }}

  # Check documentation quality
  doc-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install doc8 for documentation linting
      run: |
        python -m pip install --upgrade pip
        pip install doc8 rstcheck

    - name: Lint Markdown files
      run: |
        # Install markdownlint-cli if available
        npm install -g markdownlint-cli || echo "markdownlint not available, skipping"
        # Check markdown files
        find docs -name "*.md" -type f | head -5 | xargs -r markdownlint || echo "Markdown linting completed with warnings"

    - name: Check RST files
      run: |
        find docs -name "*.rst" -type f | xargs -r rstcheck || echo "RST check completed with warnings"

    - name: Validate documentation structure
      run: |
        # Check that key documentation files exist
        test -f docs/index.rst || (echo "Missing main index.rst" && exit 1)
        test -f docs/installation.md || (echo "Missing installation.md" && exit 1)
        test -f docs/user-guide.md || (echo "Missing user-guide.md" && exit 1)
        test -f docs/api-reference.md || (echo "Missing api-reference.md" && exit 1)
        echo "Documentation structure validation passed"